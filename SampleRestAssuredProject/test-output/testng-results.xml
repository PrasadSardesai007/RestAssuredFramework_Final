<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="5" passed="2" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-25T15:05:13 IST" name="SimpleAPITestSuite" finished-at="2024-11-25T15:05:17 IST" duration-ms="3217">
    <groups>
    </groups>
    <test started-at="2024-11-25T15:05:13 IST" name="APITests" finished-at="2024-11-25T15:05:17 IST" duration-ms="3217">
      <class name="com.qa.tests.LibraryAPITest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.qa.tests.LibraryAPITest@2ea41516]" started-at="2024-11-25T15:05:13 IST" name="setUp" finished-at="2024-11-25T15:05:14 IST" duration-ms="773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC001_getBookByAuthorName_positiveScenario()[pri:0, instance:com.qa.tests.LibraryAPITest@2ea41516]" started-at="2024-11-25T15:05:14 IST" name="TC001_getBookByAuthorName_positiveScenario" finished-at="2024-11-25T15:05:15 IST" duration-ms="1320" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Actual Book Name does not match with the expected book expected [My Gujrati Bookk] but found [My Gujrati Book]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Actual Book Name does not match with the expected book expected [My Gujrati Bookk] but found [My Gujrati Book]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at com.qa.tests.BaseTest.assertEquals(BaseTest.java:111)
at com.qa.tests.LibraryAPITest.TC001_getBookByAuthorName_positiveScenario(LibraryAPITest.java:49)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC001_getBookByAuthorName_positiveScenario -->
        <test-method signature="TC002_getBookByAuthorName_NegativeScenario()[pri:0, instance:com.qa.tests.LibraryAPITest@2ea41516]" started-at="2024-11-25T15:05:15 IST" name="TC002_getBookByAuthorName_NegativeScenario" finished-at="2024-11-25T15:05:16 IST" duration-ms="190" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Actual Message does not match with the expected Message expected [The book by requested bookid / author name does not existss!] but found [The book by requested bookid / author name does not exists!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Actual Message does not match with the expected Message expected [The book by requested bookid / author name does not existss!] but found [The book by requested bookid / author name does not exists!]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at com.qa.tests.BaseTest.assertEquals(BaseTest.java:111)
at com.qa.tests.LibraryAPITest.TC002_getBookByAuthorName_NegativeScenario(LibraryAPITest.java:79)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC002_getBookByAuthorName_NegativeScenario -->
        <test-method signature="TC003_addBook_Scenario()[pri:0, instance:com.qa.tests.LibraryAPITest@2ea41516]" started-at="2024-11-25T15:05:16 IST" name="TC003_addBook_Scenario" finished-at="2024-11-25T15:05:16 IST" duration-ms="411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC003_addBook_Scenario -->
        <test-method signature="TC004_deleteBook_Scenario()[pri:0, instance:com.qa.tests.LibraryAPITest@2ea41516]" started-at="2024-11-25T15:05:16 IST" name="TC004_deleteBook_Scenario" finished-at="2024-11-25T15:05:16 IST" duration-ms="278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC004_deleteBook_Scenario -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.tests.LibraryAPITest@2ea41516]" started-at="2024-11-25T15:05:16 IST" name="tearDown" finished-at="2024-11-25T15:05:17 IST" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.tests.LibraryAPITest -->
    </test> <!-- APITests -->
  </suite> <!-- SimpleAPITestSuite -->
</testng-results>
